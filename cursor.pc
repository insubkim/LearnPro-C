#include <stdio.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;

void    make_custom_cursor(void) {
    exec sql begin declare section;
        sql_cursor c;
        sql_cursor *cursor_pointer;
    exec sql end declare section;

    cursor_pointer = c;

    exec sql declare :c;

    exec sql close :c;
}

int main () {
    EXEC SQL BEGIN DECLARE SECTION;

        VARCHAR user[200], pass[20], tnsname[20], tmp[100];

        char    name[200];
        int     id;
        int     i = 0;
        
        const char* uid = "insub";
        const char* pwd = "123";
        const char* tns = "ORCL";

    EXEC SQL END DECLARE SECTION;

    strcpy((char*)user.arr, uid);
    user.len = (unsigned short)strlen((char*)user.arr);    

    strcpy((char*)pass.arr, pwd);
    pass.len = (unsigned short)strlen((char*)pass.arr); 

    strcpy((char*)tnsname.arr, tns);
    tnsname.len = (unsigned short)strlen((char*)tnsname.arr);

    EXEC SQL WHENEVER SQLERROR GOTO error_msg;

    EXEC SQL CONNECT :user IDENTIFIED BY :pass using :tnsname;

    printf("connected!\n");

    //    EXEC SQL declare c cursor for select id, info from student;
    EXEC SQL declare c cursor for select name from korean;

    EXEC SQL open c;

    EXEC SQL WHENEVER NOT FOUND DO break;
        while (1)
        {
            EXEC SQL FETCH c into :name;
            printf("%s\n", name);
        }
    EXEC SQL close c;

    EXEC SQL commit work release;

    make_custom_cursor();
    return 0;
    error_msg:
        printf("error message!\n");
        return -1;
}